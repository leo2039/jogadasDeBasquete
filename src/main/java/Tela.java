
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;


/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
/**
 *
 * @author Leo
 */
public class Tela extends javax.swing.JFrame {

    private int x = 0; // Incia o contador de Array dos objetos
    Jogadas[] jogada = new Jogadas[100]; //Cria o Objeto jogada

    /**
     * Creates new form Tela
     */
    public Tela() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnGravar = new javax.swing.JButton();
        txtpontuacao = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        btnListar = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblplacar = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        btnGravar.setText("Gravar");
        btnGravar.setFocusCycleRoot(true);
        btnGravar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGravarActionPerformed(evt);
            }
        });

        jLabel1.setText("Digitra a Pontuação");

        btnListar.setText("Listar");
        btnListar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnListarActionPerformed(evt);
            }
        });

        tblplacar.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Jogo", "Placar", "Placar Minimmo", "Placar Maximo", "Record Minimo", "Record Maximo"
            }
        ));
        jScrollPane1.setViewportView(tblplacar);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 745, Short.MAX_VALUE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addGap(18, 18, 18)
                                .addComponent(txtpontuacao)
                                .addGap(103, 103, 103)))
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(65, 65, 65)
                        .addComponent(btnGravar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnListar)
                        .addGap(225, 225, 225))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txtpontuacao, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnListar, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(btnGravar))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 338, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(59, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnGravarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGravarActionPerformed
        //Codigo de criação e caputra o placar do objeto jogada

        int pontuacao = Integer.parseInt(txtpontuacao.getText()); //Trasforma a string do campo TextField para uma valor inteiro 
        if ((pontuacao >= 0) && (pontuacao < 1000)) { // faz o teste se numero digitado é maior que zero e menor que 1000

            jogada[x] = new Jogadas(pontuacao); // Inicia o Objeto 

            jogada[x].setJogos(pontuacao); // grava a pontuação no obejeto x 
            JOptionPane.showMessageDialog(this, "Placar do jogo " + (x + 1) + " Gravada com sucesso!");
            x++;
        } else {
            JOptionPane.showMessageDialog(this, "Placar do jogo deve ser mair que ZERO e menor que MIL potos");
        }


    }//GEN-LAST:event_btnGravarActionPerformed

    private void btnListarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnListarActionPerformed
        // Codigo de verificação das pontuação e records 

        DefaultTableModel dtmplacar = (DefaultTableModel) tblplacar.getModel(); // Cria o modelo da tabelas para vizuaçização 

//Criação das variaveis de controle 
        int minimo = 9999;
        int maximo = 0;
        int recod_minimo = 0;
        int record_maximo = 0;

        for (int i = 0; i < 100; i++) {
            if (jogada[i] != null) { //verificação se o array esta vazio 
                if (jogada[i].pMax(jogada[i].getJogos(), maximo)) {  //verica a pontuação maxima
                    maximo = jogada[i].getJogos();// se função retorna verdadiro variavel maxima recebe o valor da pontuação do placar atual
                    record_maximo++;// se função retorna verdadeiro conatdor do record maximo e incrementado somando mais 1
                }
                if (jogada[i].pMin(jogada[i].getJogos(), minimo)) { // verificador de pontuação minima 
                    minimo = jogada[i].getJogos();// se função retorna verdadiro variavel minimo recebe o valor da pontuação do placar atual 
                    recod_minimo++;// se função retorna verdadeiro conatdor do record minimo e incrementado somando mais 1
                }
                Object[] dados = {i + 1, jogada[i].getJogos(), minimo, maximo, recod_minimo - 1, record_maximo - 1}; // trasforma a os das em um obejeto para adicionar na tabela
                dtmplacar.addRow(dados); // adiciona a lina na tabela do botão listar

            }

        }
    }//GEN-LAST:event_btnListarActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnGravar;
    private javax.swing.JButton btnListar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblplacar;
    private javax.swing.JTextField txtpontuacao;
    // End of variables declaration//GEN-END:variables
}
